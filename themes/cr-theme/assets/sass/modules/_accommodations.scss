.accommodations{
    &-filters {
        @include respond(tab-port) {
            margin: 0 0 40px;
        }
        &-borders{
            > div {
                &::after, &::before {
                    @include color-themes($color:false, $bgcolor:true, $border-color:false, $color-type: secondary);
                }
            }
        }
        &-inner {
            @each $theme-name, $theme-color in $themes-map-lightbg{
                .theme-#{$theme-name} & {
                    background-color: $theme-color;
                }
            }
            @include respond(tab-port) {
                display: block;
            }
        }
    }
    &-list {
        @include respond(tab-port) {
            display: block;
        }
    }
    &-item {
        @include respond(tab-port) {
            width: 100%;
            padding: 0;
        }
        &-subtitle {
            color: $color-base-secondary;
            @include color-themes($color:true, $bgcolor:false, $color-type: secondary);
        }
    }
    &-filter {
        @include respond(tab-port) {
            width: auto;
            max-width: 320px;
            border: 0 none!important;
            margin: 0 auto;
        }
        &-location, &-roomtype {
            @include color-themes($color:false, $bgcolor:false, $border-color:true, $color-type: base);
        }
        &-selected {
            @include color-themes($color:true, $bgcolor:false, $border-color:false, $color-type: base);
        }
        &-options {
            @each $theme-name, $theme-color in $themes-map-lightbg{
                .theme-#{$theme-name} & {
                    background-color: $theme-color;
                }
            }
            @include respond(tab-port) {
                z-index: 11;
            }
        }
        &-arrow {
            svg {
                .cr-path-darrow {
                    @each $theme-name, $theme-color in $themes-map-primary{
                        .theme-#{$theme-name} & {
                            fill: $theme-color;
                        }
                    }
                    
                }
            }
            
        }
        &-options {
            li {
                @include color-themes($color:true, $bgcolor:false, $border-color:false, $color-type: base);
                &.selected-option, &:hover {
                    color: $color-white;
                    @include color-themes($color:false, $bgcolor:true, $border-color:false, $color-type: base);
                }
            }
        }
        &-loader {
            svg {
                circle {
                    @each $theme-name, $theme-color in $themes-map-primary{
                        .theme-#{$theme-name} & {
                            fill: $theme-color;
                        }
                    }
                }
            }
        }
    }
}
